import hudson.model.*
import hudson.EnvVars
//from jenkinsapi.jenkins import Jenkins
//http://224fac2050a6.ngrok.io/job/atomosphere%20pipeline/50/api/json?pretty=true
script {
            env.defaultBranch = "development"
            env.ENV = "uat"
            //j = Jenkins(env.JENKINS_URL)
            //job = j.get_job("atomosphere pipeline")
            //build = job.get_last_build()
            //env.all_parameters = build.get_actions()['parameters']
        }
        
pipeline {
   agent any
   
    parameters {
    string name: 'file_location', 
            defaultValue: '../new/', 
            description: 'Configuration to build (Debug/Release/...)'
            
    string name: 'CRQ',
          defaultValue: '',
          description: 'CRQs are required for UAT and PRD'
          
    choice name: 'ENV',
          choices: "poc\ndev\nsit\nuat",
          description: 'Choose AWS Account'
          
    choice name: 'STACK_IDENTIFIER',
      choices: '1\n2\n3\n4\n5\n6\n7\n8',
      description: 'Choose function'
    booleanParam name: 'DEBUG',
      defaultValue: true,
      description:'Turn on debugging'
    string name: 'INPUT_ARGUMENTS',
      defaultValue: '{"load_type": "monthly","group_codes":[],"processed_date":""}',
      description: """INPUT_ARGUMENTS are only needed when you use execute_f360 playbook with step_function tag<br>
                      sample argument for adhoc run:{"load_type": "adhoc","group_codes":[{"group_code":"abc1","start_date":"20180901","end_date":"20190901"},{"group_code":"abc2","start_date":"20180901","end_date":"20190901"},and so on...],"processed_date":"20200214"}<br>"""
    string name: 'glue_job_name_to_be_stopped',
        defaultValue: 'chp-f360-gde-1-medical-etl-uat',
        description: """This input is used only when we want to stop all instances of given glue job in running state. Choose "execute_f360" playbook and "stop_job_runs" tag"""
    choice name: 'TAGS',
      choices: "none\ncode_deploy\ndynamodb_attribute\ndynamodb_operational\ndynamodb_configurational\ns3\nsns\niam\netl_driver_lambda\nom_cleanup_lambda\nglue_job_migrate_cmt\nglue_job_load_attribute_table\nglue_job_enrollment_etl\nglue_job_medical_driver\nglue_job_medical_etl\nglue_job_vision_etl\nglue_job_vsp_extract_etl\nstep_function\nall_glue_jobs\nstop_job_runs\nclear_om_table\nall",
      description: 'Ansible --tags'
    choice name: 'PLAYBOOK',
      choices: "provision_f360\nprovision_lambda\nterminate_f360\nterminate_lambda\nexecute_f360\ncode_deploy\njenkinsfile_update",
      description: """Playbook to run. Examples:<br>
                        jenkinsfile_update<br>
                        provision_f360<br>
                        provision_lambda<br>
                        terminate_f360<br>
                        terminate_lambda<br>
                        execute_f360<br>"""
    string name: 'BRANCH',
      defaultValue: env.defaultBranch,
      description: """Branch to build from. Examples:<br>
                        */master - master branch<br>
                        */development - development branch<br>"""
    choice name: 'APPLICATION',
      choices: "chp-f360-gde-app",
      description: 'Application to build'
    string name: 'PLAYBOOK_DIR',
      defaultValue: 'playbooks/',
      description: 'An optional additional directory'
    choice name: 'OPTIONS',
      choices: "\ncheck\nlist-hosts\nlist-tags\nlist-tasks\nsyntax-check",
      description: """check - do not make any changes; instead, try to predict some of the changes that may occur<br>
                        list-hosts - outputs a list of matching hosts; does not execute anything else<br>
                        list-tags - list all available tags<br>
                        list-tasks - list all tasks that would be executed<br>
                        syntax-check - perform a syntax check on the playbook, but do not execute it<br>"""
    
  }

   stages {
      stage('Hello') {
         steps {
            sh "echo '*********************************'"
            sh "echo file_location : ${params.file_location}"
            sh "echo crq : ${params.CRQ}"
            sh "echo env : ${params.ENV}"
            sh "echo stack_idntfr : ${params.STACK_IDENTIFIER}"
            //sh "echo all_param : ${env.all_parameters}"
            sh "echo '*********************************'"
            //git credentialsId: 'bf5e3fbc-9467-41c0-942b-13c4ed7cc822', url: 'https://github.com/sunilkumarrai2/Ansible.git'
            sh "echo ${params.file_location}"
            sh "rm -rf ${params.file_location}"
            sh "cp -r . ${params.file_location}"
         }
      }
   }
}
